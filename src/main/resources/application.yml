# indent sensitive. any changes in the indentation drastically impact the performance.
spring:
  jackson:
    default-property-inclusion: non_null
  cloud:
    openfeign:
      oauth2:
        enabled: true
        clientRegistrationId: twitch
      client:

        config:
          twitch-api:
            url: https://api.twitch.tv/helix
            loggerLevel: basic
            default-request-headers:
              Client-Id: "g2a6fm911ybpjm7t2tcvvbxq46fb9w"
  security:
    oauth2:
      client:
        registration:
          twitch:
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_post
            client-id: "g2a6fm911ybpjm7t2tcvvbxq46fb9w"
            client-secret: "h3oaytwn35m3r3lyb8ru7vu0sd5bpy"
        provider:
          twitch:
            token-uri: https://id.twitch.tv/oauth2/token
  datasource:
    url: jdbc:mysql://${DATABASE_URL:localhost}:3306/twitch?createDatabaseIfNotExist=true  #How do you connect to the database? JDBC is the standard framework for Java connections.
    #What does the URL above mean? jdbc:mysql is the protocol; the address is the DATABASE_URL (environment variable) 
    # or localhost. Which port should I connect to: 3306 (Spring Boot uses 8080, MySQL uses 3306)? 
    # Find the value of MYSQL_DATABASE, which is the Twitch database. If not found, create a new one.
    username: ${DATABASE_USERNAME:root}  #If there’s a database in the cloud, it’s not as simple as on a local setup. The local user name is root; on AWS, you need to use the configured login credentials.
    password: ${DATABASE_PASSWORD:secret}  #Locally, the password is set to "secret," but on AWS, you need to use a more complex password for security.
    driver-class-name: com.mysql.cj.jdbc.Driver  # This driver is related to the runtimeOnly defined in Gradle. If it’s not defined in Gradle, you won’t be able to find this driver here, and it will result in an error.
  sql:
    init:
      mode: ${INIT_DB:always}  #If not specified, the default is always. However, when running on AWS, we define these environment variables in AWS to avoid messing up and picking up incorrect information—this is an internal Linux operation.
      schema-locations: "classpath:database-init.sql"  #When running, the program is inside the package; classpath is a keyword used to identify files. If it's a file, just write the file name; if it's a class, use the package name.
  cache:
    caffeine:
      spec: expireAfterWrite=5s

logging:
  level:
    org.apache.coyote.http11.Http11InputBuffer: DEBUG # Incoming http requests
    com.tpd.twitch.external.TwitchApiClient: DEBUG
    org.springframework.jdbc.core: DEBUG # SQL